name: Update & Deploy Dashboard (debug)

on:
  workflow_dispatch:

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "18"
      - run: npm install googleapis@^131 google-auth-library@^9.14.2
      - name: Check secrets and try read
        env:
          GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID }}
          GOOGLE_SERVICE_ACCOUNT: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
        run: |
          node - <<'NODE'
          const { google } = require('googleapis');
          const { JWT } = require('google-auth-library');

          (async () => {
            try {
              const id = process.env.GOOGLE_SHEET_ID || '';
              const raw = process.env.GOOGLE_SERVICE_ACCOUNT || '';
              console.log('ID length:', id.length);
              console.log('ID preview:', id.slice(0,6) + '...' + id.slice(-6));
              if (!id || !raw) throw new Error('Missing secrets');

              const creds = JSON.parse(raw);
              if (creds.private_key && creds.private_key.includes('\\n')) {
                creds.private_key = creds.private_key.replace(/\\n/g, '\n');
              }
              console.log('Service account email:', (creds.client_email || '(none)'));

              const auth = new JWT({
                email: creds.client_email,
                key: creds.private_key,
                scopes: ['https://www.googleapis.com/auth/spreadsheets.readonly'],
              });
              const sheets = google.sheets({ version: 'v4', auth });

              // Try a lightweight metadata call first
              const meta = await sheets.spreadsheets.get({ spreadsheetId: id });
              console.log('Spreadsheet title:', meta.data.properties?.title);

              // Then try values
              const resp = await sheets.spreadsheets.values.get({ spreadsheetId: id, range: 'A1:G10' });
              console.log('Sample rows returned:', (resp.data.values || []).length);
              console.log('✅ Access works.');
            } catch (e) {
              console.error('❌ Debug failure:', e.response?.data || e.message || e);
              process.exit(1);
            }
          })();
          NODE
